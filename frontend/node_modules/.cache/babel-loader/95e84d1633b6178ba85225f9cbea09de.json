{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n\n  editUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._getResponseData);\n  }\n\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._getResponseData);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n\n  addLikes(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (!isLiked) {\n      return this.deleteLike(cardId);\n    } else {\n      return this.addLikes(cardId);\n    }\n  }\n\n  addAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._getResponseData);\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-24',\n  headers: {\n    authorization: '3ecdcc3b-e37c-4bc7-86dd-3dd41d1fe90d',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/Miardo/dev/mesto-react/src/utils/api.js"],"names":["Api","constructor","options","_url","baseUrl","_headers","headers","_getResponseData","res","ok","json","Promise","reject","status","getInitialCards","fetch","then","getUserInfo","editUserInfo","data","method","body","JSON","stringify","name","about","addCard","link","deleteCard","cardId","addLikes","deleteLike","changeLikeCardStatus","isLiked","addAvatar","avatar","api","authorization"],"mappings":"AAAA,MAAMA,GAAN,CAAU;AACNC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,SAAKC,IAAL,GAAYD,OAAO,CAACE,OAApB;AACA,SAAKC,QAAL,GAAgBH,OAAO,CAACI,OAAxB;AACH;;AAEDC,EAAAA,gBAAgB,CAACC,GAAD,EAAM;AAClB,QAAIA,GAAG,CAACC,EAAR,EAAY;AACR,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;;AACD,WAAOC,OAAO,CAACC,MAAR,CAAgB,UAASJ,GAAG,CAACK,MAAO,EAApC,CAAP;AACH;;AAEDC,EAAAA,eAAe,GAAG;AACd,WAAOC,KAAK,CAAE,GAAE,KAAKZ,IAAK,QAAd,EAAuB;AAC/BG,MAAAA,OAAO,EAAE,KAAKD;AADiB,KAAvB,CAAL,CAGFW,IAHE,CAGG,KAAKT,gBAHR,CAAP;AAIH;;AAEDU,EAAAA,WAAW,GAAG;AACV,WAAOF,KAAK,CAAE,GAAE,KAAKZ,IAAK,WAAd,EAA0B;AAClCG,MAAAA,OAAO,EAAE,KAAKD;AADoB,KAA1B,CAAL,CAGFW,IAHE,CAGG,KAAKT,gBAHR,CAAP;AAIH;;AAEDW,EAAAA,YAAY,CAACC,IAAD,EAAO;AACf,WAAOJ,KAAK,CAAE,GAAE,KAAKZ,IAAK,WAAd,EAA0B;AAClCiB,MAAAA,MAAM,EAAE,OAD0B;AAElCd,MAAAA,OAAO,EAAE,KAAKD,QAFoB;AAGlCgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,IAAI,EAAEL,IAAI,CAACK,IADM;AAEjBC,QAAAA,KAAK,EAAEN,IAAI,CAACM;AAFK,OAAf;AAH4B,KAA1B,CAAL,CAQFT,IARE,CAQG,KAAKT,gBARR,CAAP;AASH;;AAEDmB,EAAAA,OAAO,CAACP,IAAD,EAAO;AACV,WAAOJ,KAAK,CAAE,GAAE,KAAKZ,IAAK,QAAd,EAAuB;AAC/BiB,MAAAA,MAAM,EAAE,MADuB;AAE/Bd,MAAAA,OAAO,EAAE,KAAKD,QAFiB;AAG/BgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,IAAI,EAAEL,IAAI,CAACK,IADM;AAEjBG,QAAAA,IAAI,EAAER,IAAI,CAACQ;AAFM,OAAf;AAHyB,KAAvB,CAAL,CAQFX,IARE,CAQG,KAAKT,gBARR,CAAP;AASH;;AAEDqB,EAAAA,UAAU,CAACC,MAAD,EAAS;AACf,WAAOd,KAAK,CAAE,GAAE,KAAKZ,IAAK,UAAS0B,MAAO,EAA9B,EAAiC;AACzCT,MAAAA,MAAM,EAAE,QADiC;AAEzCd,MAAAA,OAAO,EAAE,KAAKD;AAF2B,KAAjC,CAAL,CAIFW,IAJE,CAIG,KAAKT,gBAJR,CAAP;AAKH;;AAEDuB,EAAAA,QAAQ,CAACD,MAAD,EAAS;AACb,WAAOd,KAAK,CAAE,GAAE,KAAKZ,IAAK,gBAAe0B,MAAO,EAApC,EAAuC;AAC/CT,MAAAA,MAAM,EAAE,KADuC;AAE/Cd,MAAAA,OAAO,EAAE,KAAKD;AAFiC,KAAvC,CAAL,CAIFW,IAJE,CAIG,KAAKT,gBAJR,CAAP;AAKH;;AAEDwB,EAAAA,UAAU,CAACF,MAAD,EAAS;AACf,WAAOd,KAAK,CAAE,GAAE,KAAKZ,IAAK,gBAAe0B,MAAO,EAApC,EAAuC;AAC/CT,MAAAA,MAAM,EAAE,QADuC;AAE/Cd,MAAAA,OAAO,EAAE,KAAKD;AAFiC,KAAvC,CAAL,CAIFW,IAJE,CAIG,KAAKT,gBAJR,CAAP;AAKH;;AAEDyB,EAAAA,oBAAoB,CAACH,MAAD,EAASI,OAAT,EAAkB;AAClC,QAAI,CAACA,OAAL,EAAc;AACV,aAAO,KAAKF,UAAL,CAAgBF,MAAhB,CAAP;AACH,KAFD,MAEO;AACH,aAAO,KAAKC,QAAL,CAAcD,MAAd,CAAP;AACH;AACJ;;AAEDK,EAAAA,SAAS,CAACf,IAAD,EAAO;AACZ,WAAOJ,KAAK,CAAE,GAAE,KAAKZ,IAAK,kBAAd,EAAiC;AACzCiB,MAAAA,MAAM,EAAE,OADiC;AAEzCd,MAAAA,OAAO,EAAE,KAAKD,QAF2B;AAGzCgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBY,QAAAA,MAAM,EAAEhB,IAAI,CAACgB;AADI,OAAf;AAHmC,KAAjC,CAAL,CAOFnB,IAPE,CAOG,KAAKT,gBAPR,CAAP;AAQH;;AA5FK;;AAgGV,MAAM6B,GAAG,GAAG,IAAIpC,GAAJ,CAAQ;AAChBI,EAAAA,OAAO,EAAE,6CADO;AAEhBE,EAAAA,OAAO,EAAE;AACL+B,IAAAA,aAAa,EAAE,sCADV;AAEL,oBAAgB;AAFX;AAFO,CAAR,CAAZ;AAQA,eAAeD,GAAf","sourcesContent":["class Api {\n    constructor(options) {\n        this._url = options.baseUrl;\n        this._headers = options.headers;\n    }\n\n    _getResponseData(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка ${res.status}`);\n    }\n\n    getInitialCards() {\n        return fetch(`${this._url}/cards`, {\n            headers: this._headers\n        })\n            .then(this._getResponseData);\n    }\n\n    getUserInfo() {\n        return fetch(`${this._url}/users/me`, {\n            headers: this._headers\n        })\n            .then(this._getResponseData);\n    }\n\n    editUserInfo(data) {\n        return fetch(`${this._url}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about\n            })\n        })\n            .then(this._getResponseData);\n    }\n\n    addCard(data) {\n        return fetch(`${this._url}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })\n        })\n            .then(this._getResponseData);\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this._url}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n            .then(this._getResponseData);\n    }\n\n    addLikes(cardId) {\n        return fetch(`${this._url}/cards/likes/${cardId}`, {\n            method: 'PUT',\n            headers: this._headers\n        })\n            .then(this._getResponseData);\n    }\n\n    deleteLike(cardId) {\n        return fetch(`${this._url}/cards/likes/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n            .then(this._getResponseData);\n    }\n\n    changeLikeCardStatus(cardId, isLiked) {\n        if (!isLiked) {\n            return this.deleteLike(cardId);\n        } else {\n            return this.addLikes(cardId);\n        }\n    }\n\n    addAvatar(data) {\n        return fetch(`${this._url}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: data.avatar\n            })\n        })\n            .then(this._getResponseData);\n    }\n\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-24',\n    headers: {\n        authorization: '3ecdcc3b-e37c-4bc7-86dd-3dd41d1fe90d',\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default api"]},"metadata":{},"sourceType":"module"}