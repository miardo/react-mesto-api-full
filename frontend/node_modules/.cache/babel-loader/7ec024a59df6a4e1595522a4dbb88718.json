{"ast":null,"code":"import _classCallCheck from\"/Users/Miardo/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Miardo/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._url=options.baseUrl;this._headers=options.headers;}_createClass(Api,[{key:\"_getResponseData\",value:function _getResponseData(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._url,\"/cards\"),{headers:this._headers}).then(this._getResponseData);}},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._url,\"/users/me\"),{headers:this._headers}).then(this._getResponseData);}},{key:\"editUserInfo\",value:function editUserInfo(data){return fetch(\"\".concat(this._url,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:data.name,about:data.about})}).then(this._getResponseData);}},{key:\"addCard\",value:function addCard(data){return fetch(\"\".concat(this._url,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:data.name,link:data.link})}).then(this._getResponseData);}},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId),{method:'DELETE',headers:this._headers}).then(this._getResponseData);}},{key:\"addLikes\",value:function addLikes(cardId){return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(cardId),{method:'PUT',headers:this._headers}).then(this._getResponseData);}},{key:\"deleteLike\",value:function deleteLike(cardId){return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(cardId),{method:'DELETE',headers:this._headers}).then(this._getResponseData);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked){if(!isLiked){return this.deleteLike(cardId);}else{return this.addLikes(cardId);}}},{key:\"addAvatar\",value:function addAvatar(data){return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:data.avatar})}).then(this._getResponseData);}}]);return Api;}();var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-24',headers:{authorization:'3ecdcc3b-e37c-4bc7-86dd-3dd41d1fe90d','Content-Type':'application/json'}});export default api;","map":{"version":3,"sources":["/Users/Miardo/dev/react-mesto-auth/src/utils/api.js"],"names":["Api","options","_url","baseUrl","_headers","headers","res","ok","json","Promise","reject","status","fetch","then","_getResponseData","data","method","body","JSON","stringify","name","about","link","cardId","isLiked","deleteLike","addLikes","avatar","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor(options) {\n        this._url = options.baseUrl;\n        this._headers = options.headers;\n    }\n\n    _getResponseData(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка ${res.status}`);\n    }\n\n    getInitialCards() {\n        return fetch(`${this._url}/cards`, {\n            headers: this._headers\n        })\n            .then(this._getResponseData);\n    }\n\n    getUserInfo() {\n        return fetch(`${this._url}/users/me`, {\n            headers: this._headers\n        })\n            .then(this._getResponseData);\n    }\n\n    editUserInfo(data) {\n        return fetch(`${this._url}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about\n            })\n        })\n            .then(this._getResponseData);\n    }\n\n    addCard(data) {\n        return fetch(`${this._url}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })\n        })\n            .then(this._getResponseData);\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this._url}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n            .then(this._getResponseData);\n    }\n\n    addLikes(cardId) {\n        return fetch(`${this._url}/cards/likes/${cardId}`, {\n            method: 'PUT',\n            headers: this._headers\n        })\n            .then(this._getResponseData);\n    }\n\n    deleteLike(cardId) {\n        return fetch(`${this._url}/cards/likes/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n            .then(this._getResponseData);\n    }\n\n    changeLikeCardStatus(cardId, isLiked) {\n        if (!isLiked) {\n            return this.deleteLike(cardId);\n        } else {\n            return this.addLikes(cardId);\n        }\n    }\n\n    addAvatar(data) {\n        return fetch(`${this._url}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: data.avatar\n            })\n        })\n            .then(this._getResponseData);\n    }\n\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-24',\n    headers: {\n        authorization: '3ecdcc3b-e37c-4bc7-86dd-3dd41d1fe90d',\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default api"]},"metadata":{},"sourceType":"module"}