{"ast":null,"code":"export var BASE_URL='https://auth.nomoreparties.co';var checkResponse=function checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));};export var register=function register(_ref){var email=_ref.email,password=_ref.password;return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(checkResponse);};export var authorize=function authorize(_ref2){var email=_ref2.email,password=_ref2.password;return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(checkResponse);};export var getContent=function getContent(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(checkResponse);};","map":{"version":3,"sources":["/Users/Miardo/dev/react-mesto-auth/src/utils/auth.js"],"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","authorize","getContent","token"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,+BAAjB,CAEP,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,GAAD,CAAS,CAC3B,GAAIA,GAAG,CAACC,EAAR,CAAY,CACR,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACD,MAAOC,CAAAA,OAAO,CAACC,MAAR,gDAAyBJ,GAAG,CAACK,MAA7B,EAAP,CACH,CALD,CAOA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAyB,IAAtBC,CAAAA,KAAsB,MAAtBA,KAAsB,CAAfC,QAAe,MAAfA,QAAe,CAC7C,MAAOC,CAAAA,KAAK,WAAIX,QAAJ,YAAuB,CAC/BY,MAAM,CAAE,MADuB,CAE/BC,OAAO,CAAE,CACL,eAAgB,kBADX,CAFsB,CAK/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEP,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAf,CALyB,CAAvB,CAAL,CAOFO,IAPE,CAOGhB,aAPH,CAAP,CASH,CAVM,CAWP,MAAO,IAAMiB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,OAAyB,IAAtBT,CAAAA,KAAsB,OAAtBA,KAAsB,CAAfC,QAAe,OAAfA,QAAe,CAC9C,MAAOC,CAAAA,KAAK,WAAIX,QAAJ,YAAuB,CAC/BY,MAAM,CAAE,MADuB,CAE/BC,OAAO,CAAE,CACL,eAAgB,kBADX,CAFsB,CAK/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEP,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAf,CALyB,CAAvB,CAAL,CAOFO,IAPE,CAOGhB,aAPH,CAAP,CAQH,CATM,CAWP,MAAO,IAAMkB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CACjC,MAAOT,CAAAA,KAAK,WAAIX,QAAJ,cAAyB,CACjCY,MAAM,CAAE,KADyB,CAEjCC,OAAO,CAAE,CACL,eAAgB,kBADX,CAEL,iCAA2BO,KAA3B,CAFK,CAFwB,CAAzB,CAAL,CAOFH,IAPE,CAOGhB,aAPH,CAAP,CAQH,CATM","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst checkResponse = (res) => {\n    if (res.ok) {\n        return res.json();\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n}\n\nexport const register = ({ email, password }) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n    })\n        .then(checkResponse);\n\n};\nexport const authorize = ({ email, password }) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n    })\n        .then(checkResponse)\n};\n\nexport const getContent = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n        }\n    })\n        .then(checkResponse)\n}"]},"metadata":{},"sourceType":"module"}